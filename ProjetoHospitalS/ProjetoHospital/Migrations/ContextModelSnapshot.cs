// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoHospital.Data;

namespace ProjetoHospital.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoHospital.Models.Atendimento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AtendeDia")
                        .HasColumnType("bit");

                    b.Property<bool>("AtendePlano")
                        .HasColumnType("bit");

                    b.Property<long>("AtendimentoDaConsultaId")
                        .HasColumnType("bigint");

                    b.Property<int>("DiaSemanaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HoraFim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AtendimentoDaConsultaId")
                        .IsUnique();

                    b.HasIndex("DiaSemanaId");

                    b.HasIndex("MedicoId");

                    b.ToTable("Atendimentos");
                });

            modelBuilder.Entity("ProjetoHospital.Models.Consulta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormaPagamento")
                        .HasColumnType("varchar(8)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("PlanoId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("PlanoId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("ProjetoHospital.Models.Convenio", b =>
                {
                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.Property<int>("IdPlano")
                        .HasColumnType("int");

                    b.HasKey("IdMedico", "IdPlano");

                    b.HasIndex("IdPlano");

                    b.ToTable("Convenios");
                });

            modelBuilder.Entity("ProjetoHospital.Models.DiaSemana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.HasKey("Id");

                    b.ToTable("DiasSemanas");
                });

            modelBuilder.Entity("ProjetoHospital.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("ProjetoHospital.Models.Especialidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("ProjetoHospital.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.HasKey("Id");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("ProjetoHospital.Models.Exame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Custo")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IdadePaciente")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(26)");

                    b.Property<decimal>("Parametro")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("SexoPaciente")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<decimal>("ValorMaximo")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("ValorMinimo")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("Exames");
                });

            modelBuilder.Entity("ProjetoHospital.Models.ExamePlano", b =>
                {
                    b.Property<int>("IdExame")
                        .HasColumnType("int");

                    b.Property<int>("IdPlano")
                        .HasColumnType("int");

                    b.HasKey("IdExame", "IdPlano");

                    b.HasIndex("IdPlano");

                    b.ToTable("ExamesPlanos");
                });

            modelBuilder.Entity("ProjetoHospital.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Atendimentos")
                        .HasColumnName("Total_atend")
                        .HasColumnType("int");

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int>("EspecialidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.HasIndex("EspecialidadeId");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("ProjetoHospital.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PlanoId")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.HasIndex("PlanoId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ProjetoHospital.Models.Plano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("ProjetoHospital.Models.PrescricaoMedicamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ConsultaId")
                        .HasColumnType("bigint");

                    b.Property<string>("FormaUso")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Medicamento")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ConsultaId");

                    b.ToTable("PrescricoesMedicamentos");
                });

            modelBuilder.Entity("ProjetoHospital.Models.RequisicaoExame", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ConsultaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataAgendamento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataRequisicao")
                        .HasColumnType("datetime");

                    b.Property<int>("ExameId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnName("situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConsultaId");

                    b.HasIndex("ExameId");

                    b.ToTable("RequisicoesExames");
                });

            modelBuilder.Entity("ProjetoHospital.Models.Atendimento", b =>
                {
                    b.HasOne("ProjetoHospital.Models.Consulta", "Consulta")
                        .WithOne("Atendimento")
                        .HasForeignKey("ProjetoHospital.Models.Atendimento", "AtendimentoDaConsultaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoHospital.Models.DiaSemana", "DiaSemana")
                        .WithMany("Atendimentos")
                        .HasForeignKey("DiaSemanaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoHospital.Models.Medico", "Medico")
                        .WithMany("ListaAtendimento")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoHospital.Models.Consulta", b =>
                {
                    b.HasOne("ProjetoHospital.Models.Paciente", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoHospital.Models.Plano", "Plano")
                        .WithMany("Consultas")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoHospital.Models.Convenio", b =>
                {
                    b.HasOne("ProjetoHospital.Models.Medico", "Medico")
                        .WithMany("Convenios")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoHospital.Models.Plano", "Plano")
                        .WithMany("Convenios")
                        .HasForeignKey("IdPlano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoHospital.Models.Endereco", b =>
                {
                    b.HasOne("ProjetoHospital.Models.Estado", "Estado")
                        .WithMany("ListaEndereco")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoHospital.Models.ExamePlano", b =>
                {
                    b.HasOne("ProjetoHospital.Models.Exame", "Exame")
                        .WithMany("ExamePlanos")
                        .HasForeignKey("IdExame")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoHospital.Models.Plano", "Plano")
                        .WithMany("ExamePlanos")
                        .HasForeignKey("IdPlano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoHospital.Models.Medico", b =>
                {
                    b.HasOne("ProjetoHospital.Models.Endereco", "Endereco")
                        .WithOne("Medico")
                        .HasForeignKey("ProjetoHospital.Models.Medico", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoHospital.Models.Especialidade", "Especialidade")
                        .WithMany("Medicos")
                        .HasForeignKey("EspecialidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoHospital.Models.Paciente", b =>
                {
                    b.HasOne("ProjetoHospital.Models.Endereco", "Endereco")
                        .WithOne("Paciente")
                        .HasForeignKey("ProjetoHospital.Models.Paciente", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoHospital.Models.Plano", "Plano")
                        .WithMany("Pacientes")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoHospital.Models.PrescricaoMedicamento", b =>
                {
                    b.HasOne("ProjetoHospital.Models.Consulta", "Consulta")
                        .WithMany("PrescricaoMedicamentos")
                        .HasForeignKey("ConsultaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoHospital.Models.RequisicaoExame", b =>
                {
                    b.HasOne("ProjetoHospital.Models.Consulta", "Consulta")
                        .WithMany("RequisicaoExames")
                        .HasForeignKey("ConsultaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoHospital.Models.Exame", "Exame")
                        .WithMany("RequisicaoExames")
                        .HasForeignKey("ExameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
